Все syscalls для выполнения IO совершаются в отношении открытых файлов с использованием fd.
fd применяются для обращ.ко всем типам открыт.файлов, в т.ч. FIFO, сокеты, терминалы, аппаратн.устр-ва и обыч.файлы.
Кажд.процесс имеет свой собст. набор fd.

Обычно от боль-ва программ ожидается возмож-ть использ-я трёх стандартн. fd. Эти 3 fd открыты оболочкой еще до запуска самой прог-мы.
Вернее про-ма наследует у оболочки копии fd, а оболочка обычно работает с этими всегда открытыми тремя fd.

Имена согласно POSIX:
0 - STDIN_FILENO
1 - STDOUT_FILENO
2 - STDERR_FILENO 

При ссылке на эти fd можно использ.либо номера, либо (предпочтительно) имена POSIX, опред-ные в файле <unistd.h>

Ключевые системные вызовы для файлового IO:
open(pathname, flags, mode);
read(fd, buffer, count);
write(fd, buffer, count);
close(fd);

Универсальность IO
Отлич.особ-ть IO UNIX - универсальность, т.е. 4 сист.вызова - open(), read(), write() и close() - применяются для IO во всех типах файлов, в т.ч., например, терминалы.

Нужно уметь в данном разделе реализовать

- open(), openat() # open() - традиционный интерфейс, openat() - новый интерфейс
- read()
- write()
- close()
- lseek()
