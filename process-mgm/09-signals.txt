Сигнал - программное прерывание процесса. ОС использует сигналы для сообщения об исключительной ситуации в выполняемой программе.

Библиотека GNU C определяет ряд типов сигналов, каждый для конкрет. вида события.

События, которые генерируют сигналы, относятся к трем главным категориям:
- ошибки
- внешние события
- явные запросы

Не все виды ошибок генерируют сигналы. Н-р, открытие несуществующего файла - ошибка, но не вызывает сигнал, просто возвращает -1.

Сигналы могут быть сгенерированы синхронно и асинхронно.
Синхронный сигнал - специфическое действие в программе и вызывается (если не блокирован) в течение этого действия.
Асинхронные сигналы - сгенерированы снаружи при контроле над процессом, который получает их. Эти сигналы занимают
непредсказуемое время в теч.выполнения.
Сигналы ошибок обычно синхронны. 

Когда сигнал сгенерирован, он откладывается. Обычно он задерживается на короткий период времени и потом передается процессу.
Для большинства сигналов программа иеет выбор:
	- игнорировать сигнал
	- определить функцию обработчика
	- принять заданное по умолчанию действие для этого сигнала
	
	Программа определяет выбор, используя функции (syscalls) типа signal() или sigaction(). Мы иногда говорим, что обработчик
захватил сигнал.
	В то время, как обработчик выполняется, этот специфический сигнал обычно блокируется.
	
	Сигналы, кот.обычно представляют ошибки в программе, имеют спец.особенность: когда один из этих сигналов завершает процесс, он
также формирует дамп core-файла, в кот записывает состояне процесса во время окончания. Core-файл можно исследовать отладчиком.


	Имена сигналов определены в signal.h
	
	The two integers keep track of:
	- pending signals
	- blocked signals

	
