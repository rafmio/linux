Конкурентность можно реализовать в виде:
1 - многопоточности
2 - многопроцессности

ПОТОКИ
Инициатор и владелец любого потока - процесс. Невозможно создать разделяемый поток и передать владением им другому пр-ссу.
У каждого процесса - минимум 1 поток - главный или основной.

Все потоки имеют общий PID. Кажд. поток наследует все его атрибуты, в т.ч. ID группы, пользовател, текущ. рабоч. каталог и 
обработч. сигналов.

У каждого потока есть уникальный TID (thread ID). 
У каждого потока есть собственная выделенная маска сигналов, позволяющая фильтровать сигналы, кот. он будет получать.

Когда процесс принудительно завершается, вместе с ним удаляются все его потоки.
Когда заканчивает работу главный поток, процесс немедленно завершается. Но если у него есть другие отсоединенные потоки, 
то он подождет, пока все он не доработают до конца.

Программу, в которой потоки синхронизированы и больше не наблюдается гонка данных ли состояния гонки
называется ПОТОКОБЕЗОПАСНОЙ.

Native POSIX Threading Library, NPTL - главная реализация pthreads для Linux. Достаточно подключить <pthread.h>
У этой библиотеки есть расширения, доступные только при подключении <semaphore.h>
