1. код на си - PID, PPID
2. код на Go - PID, PPID
3. ls /proc, htop, ps, ps -eaf, cat /proc/<PID>/cmdline, cat /proc/<PID>/status
4. strace ./executableFile
5. $ lsof -p <PID> # просмотр открытых файлов процесса
6. $ systemctl # просмотр запущенных процессов
7. $ ps | grep -v "\?" # вывести результаты, кроме тех, что содержит "?". Обратный слэш \ - экранирование
8. Перевести процесс в фон (Ctrl+Z), просмотр процессов в фоне jobs, jobs -l, переключение на процесс в фоне fg %1 (дошло: fg - ForeGround)
<<<<<<< HEAD
9. Убить процесс жестко: $ kill -KILL <pid>, убить процесс корректно $ kill -TERM <pid>
10. Просмотр дампа файла $ objdump -d <fileName>
11. Просмотр ассемблерный код исп.файла на Си $ gcc -S <fileName> 
=======
<<<<<<< HEAD
9. Убить процесс жестко: $ kill -KILL <pid>
10. Просмотр дампа файла $ objdump -d <filaName>
11. Просмотр ассемблерный код исп.файла на Си 
>>>>>>> 1ea3894efea3a1170fa6ab66f2b9cbfb33aadc98
12. Написать код по запуску execve() на Си, в т.ч. с аргументами
=======
9. Убить процесс - из командной строки, системным вызовом kill()
10. Просмотр дампа файла $ objdump -d <filaName>
11. Просмотр ассемблерный код исп.файла на Си 
12. Написать код по запуску execl() на Си, в т.ч. с аргументами
13. Просмотр размеров текстового сегмента бинарника: $ size -A fileName.exe
14. код на Си - размещение переменных в сегментах памяти процесса
15. код на Си - адрес вершины стека процесса
>>>>>>> f657eec (Home PC 18.07.2023 17:28)
