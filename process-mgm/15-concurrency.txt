Concurrency

Конкурентность - несколько участков логики программы выполняются одновременно. Многие соврем. программн. системы конкурентны.
Кон-сть в той или иной степени присутст. в любом совр. ПО. Поддержка конкурентности - в ядре.

Конкурентная и параллельная работа - разные вещи. 


Параллелизм
Параллелизм - два задания выполняются одновременно, в параллель. Параллельность - протекание двух событий в один и тот же момент.
В случае с конкур-но системой это нет так; прежде чем выполнить другое задание она должна остановить текущее. 

Для параллельного выполнения необходимо разделить и изолировать вычислительные блоки, каждый из которых назначается определенному
заданию. В компьютерной системе таким блоком выступает ядро процессора, кот.может выполнять по одной инстр-ции за раз.

Параллелизм возможет в задачах, которые можно распараллелить - разделить алгоритм на части и запустить в разных вычисл. блоках.
Сегодня большинство алгоритмов, которые мы пишем - последовательны, а не параллельны.


Конкурентность
Многозадачность - на этой идее зиждетс конкурентность. Конкур-сть можно считать имитацией парал.выпол-я заданий.


Планировщик заданий.
	- у планировщика есть очередь заданий. Задания - набор операций, кот. д.б. выполнены в отдельн.потоках
	- очередь поддерживает приоритеты. Высокий приоритет - в первую очередь
	- Планировщик разделяет вычисл.ресурсы м/у всеми заданиями. 
	- Если стратегия планирования - вытесняющая, то у планировщика д.б. возмож-ть принудит-но освобождать ядро пр-ссора.
	  Это назыв-ся вытесняющ.планирование. Еще есть стратегия, в кот. задание добровольно освобожд. пр-ссор - кооперативное
	  планир-е


Ситуация, когда вытесняющий планировщик останавливает пр-сс посреди выполнения и запускает вместо него другой 
называется переключением контекста.
Большинство ОС на сегодня использ. вытесняющий планировщик.

Если можно написать программу, кот.приемлемо работает, не прибегая к конкурентности - то так и нужно поступить.

Последовательное выполнение - следующая инструкция может быть выполнена только после предыдущей. Следующая должна ждать
своей очереди. Обычно говорят, что текущая инструкция БЛОКИРУЕТ следующую. В таком случае текущ.инструкция - блокирующая.

В любой программе все инструкции - блокирующие, а каждый поток выполнения - последователен.

Если серверная программа ожидает подключение клиента (время подключения предугадать невозможно) или программа ожидает, когда
пользователь закончит ввод - вот ситуации, когда необходима конкурентная система заданий.  

Итоговое состояние - набор всех имеющихся неразделяемых переменных и их значений непоср-но после выполнения пследней
инструкции задания.

Промеждуточное состояние - набор всех существующих неразделяемых переменных и их значений в момент выпол-я определенной 
истр-ции. 
 
Разделяемое состояние - набор переменных с соотв-щими знач-ми в опр-й мом.времени, но эти значения м.б. прочитаны и изменены в системной конкур-ных заданий. 
