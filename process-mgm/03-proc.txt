Бинарный модуль - скомпилированный исполняемый код, находящийся на в хранилище, например на диске.
Бинарный модуль можем называть программой. Большие и значительные бинарные модули можем называть приложениями.

PID 1 - init (запускается линком - /sbin/init, оригинал /lib/systemd/systemd)
PID 0 - swapper (или sched, или idle) - не обычный процесс польз.режима, а часть ядра

История
Исторически сложилось, что старые Unix использовали свопинг, а не подкачку по требованию. Т.о. swapper отвечал за процесс своппинга - перемещения всех страниц процесса из/в память/резервное хранилище. В случае с Линукс PID 0 использовался как "idle process", просто ничего не делающий (как nops) - чтобы в Линукс всегда было что-то, что процессор может выполнить (для случаев, когда процессор не может быть остановлен для экономии энергии)

Значение PPID 0 для процесса инициализации означает, что у процесса инициализации нет родителя.

Уточнить что в итоге такое процесс под PID 0
Книга Р.Лав: процесс бездействия или пассивный, который выполняется ядром в остуствие всех других процессов, имеет PID 0. А процесс инициализации - PID 1

Книга Карман "Экстримальный Си": В Linux самым первым процессом является планировщик, кот. входит в образ ядра и имеет PID 0. Следующий процесс - init (systemd), имеет PID 1. Это первый процесс, созданный планировщиком. 

Предпочтительное и наиболее вероятное размещение процесса инициализации в Линукс - /sbin/init.
Ядро перебирает 4 варианта в следующем порядке
- /sbin/init - самое вероятное
- /etc/init
- /bin/init - резервное размещение процесса инициализации
- /bin/sh - место оболочки Bourne, которую ядро попытается запустить, если не найдет init

Если не удалось запустить - ядро переводит систему в состояние "паники"

Максимальная величина PID установлена в файле /proc/sys/kernel/pid_max

PIDы назначяются ядром строго линейно, поочередно. Пока не будут перебраны все PID до максимума, ядро повторно не назначает PID другому процессу (который уже уничтожет)

Каждый процесс принадлежит к опред.пользователю и группе. 
- /etc/passwd
- /etc/group

Каждый процесс наследует пользователя и группу.
Каждый процесс является частью группы процессов (не путать группу процессов и группу и пользователей)
Когда пользователь запускает конвейер (ls | less), все команды в конвейере становятся членами одной и той же группы процессов.


