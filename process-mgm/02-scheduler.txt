Process scheduler - системный планировщик
От планировщика зависит какой процесс д.б. запущен следующим

Многозадачность:
- кооперативная (cooperative) - процесс сам знает, когда прерваться и передать управление (yielding)
- вытесняемая или приоритетная (preemptive) - решение о передаче управления принимает планировщик

Вытеснение, или - Приоритетное прерывание обслуживания - (preemption) - временное и принудительное прекращение выполнение процесса.


Квант (timeslice) процессорного времени - период времени, в теч.кот. проц-сс выполняется до момента вытеснения - это числовое значение, определяющее, как долго может выполняться процесс до того момента, пока он не будет вытеснен

Системный планировщик
Начиная с ядер 2.5 новый планировщик - планировщик типа О(1) - O(1) scheduler
О(1) плохо работал с интерактивными и диалоговыми несерверными приложениями. Идеально подходил для серверов.

С 2.6 - несколько новых планировщиков. Самый знаменитый - RSDL (Rotating Staircase Deadline) - циклический ступенчатый граничный планировщик), в кот. была реализована концепция справедливого планирования (fair scheduling), повзаимствовали из теории очередей. В 2.6.23 был заменен на CFS (Completely Fair Scheduler)

Грубое разделение процессов на виды (в контексте планирования):
- операции ввода-вывода (I/O-bound)
- интенсивно использующие CPU (processor-bound)

Round-Robin (RR) - процессы с одинаковым приоритетом выполняются по кругу, один за другим

Два разных диапазона приоритетов процессов
- nice -20 +19. Стандартное значение == 0. Большее значение - большая тактичность ("уступчивость")
- real-time priority: 0-99. Большее значение - больший приоритет

Увидеть список процессов и соотв. им значения приоритета реальн.времени:
$ ps -eo state,uid,pid,ppid,rtprio,time,comm

Отметка "-" в выводе команды - процесс не принадлежит к реальному времени

В планировщике CFS в Linux значения квантов напрямую не назначаются процессам. Подход: процессам выделяется доля (portion) процессорного времени. В Linux длительность использования CPU процессом зависит от загрузки системы. Также на величину может влиять nice. Процессам с большим nice - меньший приоритет - меньше времени.

Планировщик Linux имеет модульную конструкцию - классы планировщика (scheduler classes). Благодаря модульности/классовости в планировщике могут сосуществовать несколько разных алгоритмов планирования.
У каждого класса - свой приоритет.

В планировщике CFS понятие кванта времени не используется.

Структура обхекта планировщика (struct sched_entity{}) встроена в дескриптор процесса task_struct в виде переменной se (элемент se)

Очереди
Active processes are placed in an array called a run queue (rq).


Переключение контекста - переход от одной выполняемой задачи к другой с помощью функции context_switch():
	- вызывается switch_mm(), кот.определена в <asm/mmu_context.h>. Выполняет переход от виртуальной памяти старого процесса к вирт.памяти нового
	- вызывается switch_to(), кот.определена в <asm/system.h>, кот переключает состояние CPU от старой задачи к новой - сохранение и восст. инфы стека ядра и регистров CPU, другиие состояния
	
	В Linux предусмотрены 2 стратегии планирования в режиме реальн.времени (real-time):
- SCHED_FIFO
- SCHED_RR
	Планирование обычных задач (т.е. не в режиме реального времени) осуществляется с использ.стратегии SCHED_NORMAL
