МЬЮТЕКС
MUTEX

Мьютексы в <pthread.h> можно применять для синхронизации потоков и пр-ссов.

Мьютекс - это семафор, кот. позволяет заходить на критический участок только одному потоку за раз.
Семафоры допускают нахождение на крит.участке нескольких потоков.

Работа с мьютексом:
1.Объявить переменную мьютекса типа pthread_mutex_t
2.Инициализировать мьютекс с помощью pthread_mutex_init(&mtx, NULL); 
3.Перед входом в критический участок - залочить: pthread_mutex_lock()
4.После выхода из критического участка - разлочить: pthread_mutex_unlock()
5.Разрушить мьютекс pthread_mutex_destroy()

Можно создавать мьютексы динапично, но в большинстве случаев их использование статично:

pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;

??? PTHREAD_MUTEX_INITIALIZER (?) - аналог применения функции pthread_mutex_init()

Если мьютекс доступен в момент вызова, функция pthread_mutex_lock() вернет значение немедленно 
В большинстве случаев стараются избегать глобальных блокировок, вместо этого связывают локи с конкретными структурами данных.
Это называется детализированной блокировкой. 

Мьютексы лучше применять с условными переменными (?)

pthread_cond_signal() можно использовать для уведомления одного потока. Для уведомления всех потоков, кот. ждут
усл. переменную, предусмотрена ф-ция pthread_cond_broadcast.


