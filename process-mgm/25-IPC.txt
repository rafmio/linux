IPC

- разделяемая память
- файловая система (на диске, в памяти)
- POSIX-сигналы
- POSIX-каналы
- очереди сообщений POSIX
- сокеты домена Unix
- интернет-сокеты (сетевые сокеты)

Методы разделяемой памяти и файловой системы похожи - АКТИВНЫЕ методы. Остальные - ПАССИВНЫЕ

Все метода IPC сводятся к передаче сообщений между двумя процессами. Сообщение содержит послед-ть байтов, кот. собираются вместе с четко определенным интерфейсом, протоколом, стандартом. Структура сообщения д.б. известна обоим процессам.

Активные методики подразумевают наличие разделяемого ресурса или носителя - файл, разд. память или сетевой сервис (NFS-сервер).
В пассивных методах вместо таких ресурсов или носителей используется КАНАЛ. Сами сообщения нигде не хранятся

При активном подходе все процессы должны сами ИЗВЛЕКАТЬ из носителя доступные сообщения. При пассивном - входящиие сообщения ПЕРЕДАЮТСЯ (доставаляются) принимающей стороне.

Активные методики подразумевают наличие разд.ресурса или носителя, конкурентный доступ к кот. необходимо синхронизировать.
С пассивными методиками синхронизация не требуется. 

При использ. активных методик пр-ссы могут работать независимо друг от друга, т.к. сообщения хранятся в разд. ресурсе, их извлечение можно отложить. Т.е. доступно выполнение в АСИНХРОННОЙ манере.
Для пассивных методов IPC оба процесса должны находиться в активном состоянии. Т.е. процессы выполняются в СИНХРОННОЙ манере. 

При использ. пассивн. методик кажд. пр-сс имеет врем. буфер,кот. хранит поступ.сообщения. Он находится в ядре и сущ., пока процесс не завершился. Доступ к нему м.б. конкурентным, синх-я должна гарантироваться ядром.

Сообщения состоят из байтов - обе стороны должны уметь превращать объект (текст, видео...) в байтовую послед-сть и восстанавл. тот же объект. КОММУНИКАЦИОННЫЙ ПРОТОКОЛ.

Каждый фрагмент инфы, передаваемый с пом. любого метода IPC д.б. переведет в байтовую послед-сть - это называется СЕРЕАЛИЗАЦИЕЙ или МАРШАЛИНГОМ. Восстоздание из исходного объекта другой стороной - ДЕСЕРИАЛИЗАЦИЯ или ДЕМАРШАЛИНГ.

Иногда синоним десериализации - ПАРСИНГ (хотя это это разные понятия).

В разных языках прог-я существуют БИБЛИОТЕКИ СЕРИАЛИЗАЦИИ. 

Один из известных алгоритмов одирования двоичных данных в текст - Base64. Такие алгоритмы широко используются в сугубо текстовых протоколах, типа JSON, для отправки двоичной инфы.

Сообщения могут иметь ФИКСИРОВАННУЮ или ПЕРЕМЕННУЮ длину. Большинство протоколов используют переменную длину. 
Механизмы пометки конца сообщения:
- использование разделителя - последовательности байтов или символом
- обрамление фиксированной длины - у кажд.сообщ-я есть префикс фикс.длины (4 байта, например), в кот. указано сколько байтов необходимо прочитать
- использование конечного автомата - чтобы прочитать полное сообщение, принимающ.сторона должна знать грамматику протокола и применить подходящий десериализатор, основанный на конеч.автомате

Общение между процессами (обычно) - запрос-ответ.  Процесс-слушатель ожидает сообщения


