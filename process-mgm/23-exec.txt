В случае успешного выполнения exec() предыдущий процесс исчезает, а его место занимает новый. Т.е. не происходит создание нового процесса. Если выполняется инструкция, которая идет после exec(), то это означает, что exec() закончилась с ошибкой.

При вызове fork() создается новый процесс, при exec() - нет.

fork() дублирует все содержимое памяти род.пр-сса, потомку доступны все те же адреса и переменные.
exec() уничтожает структуру памяти базового процесса и создаёт новую стр-ру, основанную на загруженном исп-мом файле. 

exec() не копирует атрибуты, ничего не наследует

Исполняемыми являются объектные файлы ELF, Mach, или скрипты, которым нужен интерпретатор. Когда польз. прост-во инициирует exec(), ядро получает новый запрос на запуск исполняем. файла. Оно пытается найти подходящий обработчик для файлов этого типа и затем использует ЗАГРУЗЧИК, чтобы загрузить содержимое исп.файла.

Со скриптом загруж-ся интерпретатор, кот.обычно указ-ся в первой строчке скрипта символом #!

Действия загрузчика:
- проверить контекст выполнения и права доступа поль-ля, кот. запросил выполнение
- выделить для нов.пр-сса адресн. пр-во в осн.памяти
- скопировать двоич. содержимое исп.файла в выделенное пр-ство. В основном сегменты данных и кода
- выделить память под стек и подготовить начальные привязки памяти
- создать главн.поток выпол-я и его сегмент стека

