Структура виртуальной памяти подразумевает разбиение памяти, используемой каждой программой, на небольш.блоки фикс.размера - страницы.
Опер.память делится на блоки страничных кадров (фреймов) одинакового размера.
Копии неиспользуемых страниц программы рамещаются в область подкачки.

Когда пр-сс ссылается на страницу, кот.нет в оперативной памяти (ОП) - ошибка отсутствия страницы - ядро приост.вып.пр-сса - ожидание загрузки с диска в память.

В файле /proc/meminfo содержится (некоторые?) сведения о памяти системы
Посмотреть размер страницы:
$ getconf PAGESIZE

Таблица страниц - описание размещения каждой страницы в вирт.адр.простр-ве процесса. 
Реализация вирт.памяти требует аппаратной поддержки в виде блока управления странич.памятью - Paged Memory Management Unit (PMMU).

Хотя стек растет вниз, мы все равно называем растущий край стека вершиной

Стек ядра - поддерживаемая в памяти ядра область, выделяемая каждому процессу, которая используется в кажчестве стека для выполнения ф-ций, вызываемых внутри сист.вызова в ходе его работы. Ядро не может для этой цели исп.польз.стек - он в незащищ.польз.области.

Пользовательский стек содержит:
	- аргументы ф-ции и локальные переменные (автоматические переменные -  появляются и удаляются автоматически с 
      исчезновением фрейма). Отличие автоматических от статических (глобальных) - последние сущ-ют постоянно, 
	  независимо от выполнени ф-ций
	- инф-я, связ-я с вызовом. Когда одна ф-я вызыв.другую - копия регистров (сч.команд, проч.) сохраняется в стековом фрейме
	  вызываемой ф-ции, чтобы при возврате можно было восстановить значения соотв.регистров

argc и argv доступны только как аргументы main(). Чтобы сделать аргументы командной строки переносимыми и доступными в др.ф-циях - нужно либо передать argv таким ф-циям в качестве аргумента, либо определить глоб.переменную, указывающ.на argv.

Программа может получить доступ к аргументам своей собс.ком.строки через файл /proc/self/cmdline 
