STACK

Процесс может продолжать выполнение и без кучи, но без стека работать не будет.
Стек - главный аспект метаболизма процесса. Функцию можно вызвать только используя стек. Без этого сегмента нельзя выполнить
ни одну ф-цию.

Стек - изолированная область памяти, читать и модифицировать кот-ю может только владелец. Чтобы работать с пр-ссом - нужно
быть частью пр-сса, к которому он принадлежит.

В стеке по умолчанию выделяются все переменные и массивы. 
Для выделения памяти в куче нужно использ. malloc(), calloc() и аналоги. В противном случае память будет выделена в стеке, 
а точнее - на его вершине.

Стек заполняется в обратном порядке. Другие области памяти заполняются, начиная с младшего адреса. Заполнение стека 
происходит от старших адресов к младшим.

Запись непроверенных значений в буфер (байтовый или символьный массив), выделенный на вершине стека (а не в куче), считается уязвимостью. Злоумышленник может тщательно подготовить массив байтов с "скормить" его программе, чтобы получить контроль над ее выполнением.
Обычно это называют ЭКСПЛОЙТОМ в результате переполнения буфера.

Только переменные, находящиеся в стеке, выделяются и освобождаются автоматичеки. Любая переменная, объявленная в стеке, автоматически
создается на вего вершине. 

Глобальные переменные выделяются в другом сегменте памяти, Data ли BSS, который ведет себя не така, как стек.

