Когда ОС создает пр-сс, одно из первый действий - выделяет участок памяти с заранее определенной внут.структурой.
Части выделенной памяти - сегменты.

Сегманты в структуре памяти:
	- берутся из исполн. файла (статическая схема размещения в памяти)
	- создаются динамически (динамическая схема размещ. в памяти)

Инструменты для исслед. статич.памяти обычно рассчитаны на объектн. файлы.

Динамическая схема размещения - это НЕ ТОЖЕ САМОЕ, что динамическое выделение памяти, нельзя путать, разный смысл.


void func() {
	int a;
}

В данной ф-ции при объявл-и переменной не указано ничего, что позволило бы компилятору понять в каком сегменте следует
выделить память. Поэтому компилятор по умолчанию использует стек. 

В стеке хранятся не только переменные. При каждом вызове ф-ции на стек клатедся новая запись под названием "стековый фрейм".
Стек доступен лишь одному пр-ссу, др.программы не могут читать или изменять её.

BSS используется для хранения глобальных переменных, кот.либо равны нулю, либо не инициализированы
Data - для хранения инициализированных глобальных переменных.

Локальные переменные всегда создаются на вершине стека.

Доступ к Data, Text и BSS ограничен (используются реже, чем куча и стек). Причина - Data, Text и BSS генерируются
компилятором и занимают небольную ддолю в объеме памяти запущенного пр-сса.
